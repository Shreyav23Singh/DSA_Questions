 * * * * * question 1 * * * * *

class Main {
  public static void main(String[] args) {
    String s1="Shreya Singh";
    char ch[] ={'R','a' , 'k' , 'e' ,'s' , 'h'};
    String s2=new String(ch);
    String s3="Hardwork";
    String s4=new String("Pays Off");
    System.out.println(s1);
    System.out.println(s2);
    System.out.println(s3);
    System.out.println(s4);
  }
}

 * * * * * question 2 * * * * *

class Main {
  public static void main(String[] args) {
   String first_name ="Shreya";
    String last_name="Singh";
    String s1="hello";
      String s2="wello";
    String fullname = first_name + " " + last_name ; //concatenation
    System.out.println(fullname);

    //Wanna know fullname length - .length() method
    System.out.println(fullname.length());
    //charAt(i) Method
    System.out.println(fullname.charAt(2));

    for(int i=0;i<fullname.length() ;i++){ //if you want to print each character of a string
      System.out.println(fullname.charAt(i));
    }

      
      //compare two strings
      if(s1.compareTo(s2) ==0){
        System.out.print("Strings are EQUAL");
      }else{
        System.out.print("Strings are NOT EQUAL");
      }


    
  }}
  
  Output
  Shreya Singh
12
r
S
h
r
e
y
a
 
S
i
n
g
h
Strings are NOT EQUAL

* * * * * question 3 * * * * *

//Substrings -To find one word in a strings
class Main{
  public static void main(String[] args){
  String s1="The speed of your success is limited only  by your dedication & what you are willing to sacrifice";
  String s2=s1.substring(17,25);
  System.out.println(s2);

    String s3=s1.substring(51);
    System.out.println(s3);
  }
}

--------------Output -----------------------------
 success
dedication & what you are willing to sacrifice



---------------------------------------------------------------------------------* * * * * question 4 * * * * *---------------------------------------------------------------------------------------------

String builder - String builder can be used when you want to modify  a string without creating a new object . 
For example - Using the String Builder  class can boost performance when concatenating many strings together in a loop.
//Substrings -To find one word in a strings

class Main{
  public static void main(String[] args){
    StringBuilder s1 =new StringBuilder("Manoj");
    System.out.println(s1);

    //char at 0 index
    System.out.println(s1.charAt(0));

    //Set char at 0th index
    s1.setCharAt(0, 'P');
    System.out.println(s1);
    
  
  }
}
 
* * * * * *   Output    * * * * * 
Manoj
M
Panoj

-----------------------------------------------------* * * * * question 5 * * * * *-
//append method
class Main{
  public static void main(String[] args){
    StringBuilder s1 =new StringBuilder("R");
    s1.append("A");
    s1.append("k");
    s1.append("e");
    s1.append("s");
    s1.append("h");
    System.out.print(s1);
   
  
  }
}
Output
RAkesh
---------------------------------------------------------------------------------* * * * * question 6 * * * * *---------------------------------------------------------------------------
//REVERSE a string using string builder
class Main{
  public static void main(String[] args){
    StringBuilder  sb =new StringBuilder("Hello");
    for(int i=0;i<sb.length()/2;i++){
      int front =i;
      int back=sb.length() -1-i;
      char frontChar=sb.charAt(front);
      char backChar =sb.charAt(back);
      sb.setCharAt(front, backChar);
      sb.setCharAt(back,frontChar);
    }
    System.out.println(sb);
    
  }
}
Output
olleH

---------------------------------------------------------------------------------* * * * * question 7* * * * *----------------------------------------------------------------------
//REVERSE a string using string builder
class Main{
  public static void main(String[] args){
    StringBuilder sb=new StringBuilder("sseccuS");
    for(int i=0;i<sb.length()/2;i++){
      int front =i;
      int back = sb.length() -1-i;
      //7-1-0 =6  , S
      //7-1-1=5 , u
      //7-1-2=4 , c
      //7-1-3=3 , c
      //7-1-4=2 , e
      //7-1-5=1 , s
      //7-1-6=0 , s

      char frontChar =sb.charAt(front);
      char backchar =sb.charAt(back);

      sb.setCharAt(front, backchar);
      sb.setCharAt(back, frontChar);
    }
    System.out.println(sb);
    
  }
}

Output
Success

---------------------------------------------------------------------------------* * * * * question 8 * * * * *----------------------------------------------------------------------
//Print a  string using string builder
class Main{
  public static void main(String[] args){
    StringBuilder sb=new StringBuilder("Hardwork Pays off");
    for(int i=0;i<sb.length()/2;i++){
      int front =i;
      int back = sb.length() -1-i;
      

      char frontChar =sb.charAt(back);
      char backchar =sb.charAt(front);

      sb.setCharAt(front, backchar);
      sb.setCharAt(back, frontChar);
    }
    System.out.println(sb);
    
  }
}

Output
Hardwork Pays off
---------------------------------------------------------------------------------* * * * * question 9 * * * * *----------------------------------------------------------------------
//Take input from the user and reverse a string
import java.util.Scanner;
class Main{
  public static void main(String[] args){
    Scanner sc=new Scanner(System.in);
    String str=sc.nextLine();
    String ans = "";
    for(int i=str.length() -1 ;i>=0;i--){
      ans+=str.charAt(i);
      
    }
    System.out.println(ans);
    
    
    
    
    
  }
}


