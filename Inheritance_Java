Inheritance  : - Inheritance in Java is a mechanism in which one object acquires all the properties and behaviors of a parent object. It is an important part of OOPs 
(Object Oriented programming system).

==>  The idea behind inheritance in Java is that you can create new classes that are built upon existing classes. When you inherit from an existing class, you can reuse methods
     and fields of the parent class. Moreover, you can add new methods and fields in your current class also.
     
     
 ==>   Why use inheritance in java  <===
1.  For Method Overriding (so runtime polymorphism can be achieved).
2.  For Code Reusability.

* * * * * *  * * * *  * Why Do We Need Java Inheritance ?  * * * * * * * * ** * ** * * * *  
1. Code Reusability  :    The code written in the Superclass is common to all subclasses. Child classes can directly use the parent class code.
2. Method Overriding  :    Method Overriding is achievable only through Inheritance. It is one of the ways by which Java achieves Run Time Polymorphism.
3. Abstraction       :    The concept of abstract where we do not have to provide all details is achieved through inheritance. Abstraction only shows the functionality to the user.
     
--------------------------------------------------------------------------------------------------------------------     
#  Example 1 #

class Shape{
  String Color ;
  
  
}
class Triangle extends Shape{
  //System.out.println("Hi , I am Triangle  and mys color is : ");
}
public class Main{
  public static void main(String[] args){
    Triangle t1=new Triangle();
    t1.Color="Red";
    System.out.println("Hi , I am Triangle  and my color is : "+t1.Color );
  }
}


#  Example 2 # ------------------------------------------------------------------------------------------------------
class Employee{
  String name ;
  float salary =40000000;
}
class bonus extends Employee{
  float bonus =1000000;
}
class Main{
  public static void main(String[] args){
    bonus b1=new bonus();
    System.out.println("Salary of an Employee : " + b1.salary);
    System.out.println("Bonus of an Employee : " + b1.bonus);
  }
}

Output
Salary of an Employee : 4.0E7
Bonus of an Employee : 1000000.0

# Example 3  # ---------------------------------------------------------------------------------------------------------
class Bicycle{
 int gear;
 int speed;
  public Bicycle(int gear ,int speed ){
    this.gear=gear;
    this.speed=speed;
    
  }
  public void ApplyBrakes(int decrement){
    speed-=decrement;
  }

  public void SpeedUp(int increment){
    speed+=increment;
  }

  public String toString(){
           return ("No of gears are " + gear + "\n"
                + "speed of bicycle is " + speed);
  }
}
class Mountainbike extends Bicycle{
  int seatHeight ;
  public Mountainbike(int gear ,int speed , int startHeight){
    super(gear , speed);
    seatHeight = startHeight ;
    
    
  }
  public void setHeight(int newValue){
    seatHeight =newValue ;
  }

  public String toString(){
    return (super.toString() + "\nseat height is "
                + seatHeight);
  }

  
}

class Main{
  public static void main(String[] args){
    Mountainbike m1 = new Mountainbike(4 , 100 , 25);
    System.out.println(m1.toString());
    
   
  }
}

 *  *   *   *   *   Output  *   *   *    *  *   

No of gears are 3
speed of bicycle is 100
seat height is 25

